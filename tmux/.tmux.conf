set -ga terminal-overrides ",screen-256color*:Tc"
set-option -g default-terminal "screen-256color"

# set default shell to fish
set-option -g default-shell /usr/bin/fish

# source theme file
source-file ~/.config/tmux/theme.conf
# Avoid ESC delay
set -s escape-time 0

# unbind the prefix and bind it to Ctrl-q
# -g means global = for session, window and pane
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix
set -g status-style 'bg=#333333 fg=#5eacd3'

# Reload tmux config by prefix r
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# start numering from 1 instead 0
set -g base-index 1

# more history
set -g history-limit 100000

# don't rename windows automatically
set-option -wg automatic-rename off

# enable mouse
set -g mouse on

# copy like a vim, v, y, /, Ctrl+d, Ctrl+u
set-window-option -g mode-keys vi
unbind -T copy-mode-vi Space; #Default for begin-selection
unbind -T copy-mode-vi Enter; #Default for copy-selection
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# create a new session by prefix H to my working place
bind-key -r H run-shell "~/.config/tmux/tmux-redirect ~/projects/lipinskipawel/football-game"

# v and h are not binded by default, but we never know in the next versions...
unbind v
unbind h

unbind % # Split vertically
unbind '"' # Split horizontally

# -c = execute shell command
# #{pane_current_path} brings you back where you were in the filesystem
bind v split-window -h -c "#{pane_current_path}"
bind h split-window -v -c "#{pane_current_path}"

# use vim-like navigation between panes without perfix
# bind -n C-h select-pane -L
# bind -n C-j select-pane -D
# bind -n C-k select-pane -U
# bind -n C-l select-pane -R

# create, close window
bind-key t new-window
bind-key w kill-window

# use alt+k and alt+j to move between windows
# -n does not force you to use prefix key
# bind -n M-k next-window
# bind -n M-j previous-window



########### if-shell
## https://github.com/christoomey/vim-tmux-navigator
## https://vi.stackexchange.com/questions/44248/using-alt-instead-of-ctrl-for-vim-tmux-navigator
## https://stackoverflow.com/questions/35330381/getting-alt-to-work-in-the-terminal-with-tmux-and-vim
## https://www.reddit.com/r/tmux/comments/zdjs38/different_behavior_of_pguppgdown_keys_in_tmux_and/
## https://stackoverflow.com/questions/76484888/tmux-usage-of-if-shell


#is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|vim?x?)(diff)?$'"

# github
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"

## Send Alt+hjkl to nvim
bind -n M-j "send-keys A-j"
bind -n M-k "send-keys A-k"

#bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
#bind -n M-j send-keys M-h
#bind -n M-h if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
#bind -n M-j if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
#bind -n M-k if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
#bind -n M-l if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'

# unbind PgUp, PgDown
# bind PgUp, PgDown to next window
unbind PageUp
unbind PageDown
bind -n PageDown next-window
bind -n PageUp previous-window
