Trick yourself to enjoy reading :)

# Commands
:messages                  --> shows printed messages
:source %                  --> source will run the file. % is a "placeholder" for current file.
:nnoremap <space>          --> will print normal remaps for space
:lua = vim                 --> prints vim object
:lua = vim.api             --> prints vim.api object

:e lua/config/lazy.lua     --> create a file lazy.lua inside of lua/config directory
:e                         --> load the latest version
:e!                        --> load the latest version even if you have unsaved changes
!mkdir lua                 --> execute mkdir lua

# Tricks
Run only visually selected lua code.
Select the code and send command lua
- select
- type <:>
- type <lua>
- enter

# Nvim
## stdpath
vim.fn.stdpath("data")
Nvim has built-in functions that are living inside vim.fn. You can execute them
:echo stdpath("data")
This follows xdg config path (.local/share/nvim).

## runtime path
vim.opt.rtp:prepend(lazypath)
Put lazypath into the runtimepath of nvim

## options
Default to 1 tab and display it as 8 spaces (columns).
vim.opt.shiftwidth = 8, let's change that to 4

In your .config create after/ftplugin folder and then files with local config.
To set local config for lua files just create file lua.lua with config
vim.opt_local.shiftwidth = 2


# Plugins
Runtime path   --> :echo nvim_list_runtime_paths()
nvim will look through runtime_paths() for lua folder and load lua files.

## Lazy
Downloads the plugin, puts it inside nvim runtimepath so then your config
will be able to use code from plugin.

# Motions
0          --> jump to the front of the line
$          --> jump to the end of the line
w          --> jump to the start of next word
e          --> jump to the end of next word
b          --> jump to the start of previous word

# Operator
d          --> delete the character
dd         --> delete the line
u          --> undo last command
U          --> to fix whole line

# Operators and Motions
d$         --> delete to the end of the line

# Count operation motion
d2w        --> deletes next 2 words
2w         --> jumps 2 words

